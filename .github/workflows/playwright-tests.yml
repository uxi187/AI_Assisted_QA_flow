name: Playwright Tests CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Playwright Tests
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run Playwright tests
      run: npm test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.os }}-node${{ matrix.node-version }}
        path: |
          playwright-report/
          test-results/
        retention-days: 7
        
    - name: Upload test artifacts on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-artifacts-${{ matrix.os }}-node${{ matrix.node-version }}
        path: |
          test-results/screenshots/
          test-results/videos/
          test-results/traces/
        retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Run dependency check
      run: npx audit-ci --moderate

  lint-and-format:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check TypeScript compilation
      run: npx tsc --noEmit
      
    - name: Generate test report summary
      if: always()
      run: |
        echo "## Test Summary ðŸ“Š" >> $GITHUB_STEP_SUMMARY
        echo "- **Framework**: Playwright with TypeScript" >> $GITHUB_STEP_SUMMARY
        echo "- **Pattern**: Page Object Model (POM)" >> $GITHUB_STEP_SUMMARY
        echo "- **Browsers**: Chromium, Firefox, WebKit, Mobile" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Types**: Valid Login, Invalid Login, Session Validation" >> $GITHUB_STEP_SUMMARY
        echo "- **Features**: Custom logging, Screenshots, Videos, Traces" >> $GITHUB_STEP_SUMMARY

  deploy-reports:
    name: Deploy Test Reports
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Deploy to GitHub Pages (if main branch)
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./playwright-report
        destination_dir: test-reports